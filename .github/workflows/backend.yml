name: Deploy Backend

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'back/**'
    tags:
      - 'v*'

jobs:
  deploy:
    defaults:
      run:
        working-directory: back
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: yarn

        # build command should be set in your package.json scripts as: "build": "tsc"
      - name: Build
        run: yarn build

      - name: Move node_modules to dist
        run: mv node_modules dist/node_modules

      - name: Zip
        run: (cd dist && zip -r ../function.zip .)

      - name: Deploy to AWS
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: ${{secrets.AWS_REGION}}
          function_name: function-test
          zip_file: ./back/function.zip

  DeployDev:
    name: Deploy to Dev AWS
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: 'http://dev.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying!

  DeployStaging:
    name: Deploy to Staging
    if: github.event.ref == 'refs/heads/main'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying!

  DeployProd:
    name: Deploy to Production
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying!
