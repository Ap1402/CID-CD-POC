name: Deploy Backend

on:
  workflow_dispatch:
  push:
    branches: [main, dev]
    paths:
      - 'back/**'
    tags:
      - 'v*'

jobs:
  Build:
    defaults:
      run:
        working-directory: back
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install Dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Move node_modules to dist
        run: mv node_modules dist/node_modules

      - name: Zip
        run: (cd dist && zip -r ../function.zip .)
      - name: Upload build to artifac
        uses: actions/upload-artifact@v2
        with:
          name: function
          path: ../function.zip
          
  DeployDev:
    defaults:
      run:
        working-directory: back
    name: Deploy to Dev
    if: github.event.ref == 'refs/heads/dev'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: 'http://staging.url.com'
    steps:
      - name: Download Artifac
        uses: actions/download-artifact@v2
        with:
            name: function
      - name: Deploy to AWS
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: ${{secrets.AWS_REGION}}
          function_name: function-test
          zip_file: function.zip

  DeployStaging:
    name: Deploy to Staging
    if: github.event.ref == 'refs/heads/main'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: 'http://staging.url.com'
    steps:
      - name: Download Artifac
        uses: actions/download-artifact@v2
        with:
            name: function
      - name: Deploy to AWS
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: ${{secrets.AWS_REGION}}
          function_name: function-test
          zip_file: function.zip

  DeployProd:
    name: Deploy to Production
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: 'http://prod.url.com'
    steps:
      - name: Deploy to AWS
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: ${{secrets.AWS_REGION}}
          function_name: function-test
          zip_file: ./back/function.zip

